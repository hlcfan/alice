# Elixir CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-elixir/ for more details
version: 2
jobs:
  build:
    working_directory: ~/alice
    docker:
      - image: circleci/elixir:1.12
        environment:
          MIX_ENV: test
    steps:
      - checkout
      - run:
          name: "Creating master branch cache key"
          command: git log origin/master --pretty=format:'%H' -n 1 > latest-master-sha
      - run:
          name: "Creating build branch cache key"
          command: git log --pretty=format:'%H' -n 1 > build-branch-sha
      - restore_cache:
          name: "Restore dependency cache"
          keys:
            - v{{ .Environment.CACHE_VERSION }}-alice-dependency-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v{{ .Environment.CACHE_VERSION }}-alice-dependency-cache-{{ .Branch }}
            - v{{ .Environment.CACHE_VERSION }}-alice-dependency-cache-master-{{ checksum "mix.lock" }}
            - v{{ .Environment.CACHE_VERSION }}-alice-dependency-cache-master
      - restore_cache:
          name: "Restore build & PLT cache"
          keys:
            - v{{ .Environment.CACHE_VERSION }}-alice-build-and-plt-cache-{{ .Branch }}-{{ checksum "build-branch-sha" }}
            - v{{ .Environment.CACHE_VERSION }}-alice-build-and-plt-cache-{{ .Branch }}
            - v{{ .Environment.CACHE_VERSION }}-alice-build-and-plt-cache-master-{{ checksum "latest-master-sha" }}
            - v{{ .Environment.CACHE_VERSION }}-alice-build-and-plt-cache-master
      - run:
          name: "Setting up hex and rebar"
          command: |
            mix local.hex --force
            mix local.rebar --force
      - run:
          name: "Get & compile dependencies"
          command: |
            mix deps.get
            mix compile
      - run:
          name: "Compile project treating warnings as errors"
          command: mix compile --force --warnings-as-errors
      - save_cache:
          name: "Save dependency cache"
          key: v{{ .Environment.CACHE_VERSION }}-alice-dependency-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths:
            - deps
      - run:
          name: "Check format"
          command: mix format --check-formatted --dry-run
      - run:
          name: "Check Credo"
          command: mix credo
      - run:
          name: "Building Dialyzer PLT"
          environment:
            MIX_ENV: dev
          command: mix dialyzer --plt
          no_output_timeout: 30m
      - save_cache:
          name: "Save build & PLT cache"
          key: v{{ .Environment.CACHE_VERSION }}-alice-build-and-plt-cache-{{ .Branch }}-{{ checksum "build-branch-sha" }}
          paths:
            - ~/alice/_build
            - ~/.mix
      - run:
          name: "Run dialyzer"
          environment:
            MIX_ENV: dev
          command: mix dialyzer --halt-exit-status
      - run:
          name: "Run tests"
          command: mix test
      - run:
          name: "Run test coverage report"
          command: mix coveralls.circle
      - restore_cache:
          name: "Restore Installer dependency cache"
          keys:
            - v{{ .Environment.CACHE_VERSION }}-alice-installer-dependency-cache-{{ .Branch }}-{{ checksum "installer/mix.lock" }}
            - v{{ .Environment.CACHE_VERSION }}-alice-installer-dependency-cache-{{ .Branch }}
            - v{{ .Environment.CACHE_VERSION }}-alice-installer-dependency-cache-master-{{ checksum "installer/mix.lock" }}
            - v{{ .Environment.CACHE_VERSION }}-alice-installer-dependency-cache-master
      - restore_cache:
          name: "Restore Installer build cache"
          keys:
            - v{{ .Environment.CACHE_VERSION }}-alice-installer-build-cache-{{ .Branch }}-{{ checksum "build-branch-sha" }}
            - v{{ .Environment.CACHE_VERSION }}-alice-installer-build-cache-{{ .Branch }}
            - v{{ .Environment.CACHE_VERSION }}-alice-installer-build-cache-master-{{ checksum "latest-master-sha" }}
            - v{{ .Environment.CACHE_VERSION }}-alice-installer-build-cache-master
      - run:
          working_directory: ~/alice/installer
          name: "Get & compile Installer dependencies"
          command: |
            mix deps.get
            mix compile
      - run:
          working_directory: ~/alice/installer
          name: "Compile Installer treating warnings as errors"
          command: mix compile --force --warnings-as-errors
      - save_cache:
          name: "Save Installer dependency cache"
          key: v{{ .Environment.CACHE_VERSION }}-alice-installer-dependency-cache-{{ .Branch }}-{{ checksum "installer/mix.lock" }}
          paths:
            - ~/alice/installer/deps
      - run:
          working_directory: ~/alice/installer
          name: "Check Installer format"
          command: mix format --check-formatted --dry-run
      - run:
          working_directory: ~/alice/installer
          name: "Check Installer Credo"
          command: mix credo
      - save_cache:
          name: "Save Installer build cache"
          key: v{{ .Environment.CACHE_VERSION }}-alice-installer-build-cache-{{ .Branch }}-{{ checksum "build-branch-sha" }}
          paths:
            - ~/alice/installer/_build
      - run:
          working_directory: ~/alice/installer
          name: "Run Installer tests & check coverage"
          command: mix coveralls
